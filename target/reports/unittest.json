{
  "errors": [],
  "failures": [
    {
      "test": "test_register_order_tests.RegisterOrderTests.test_product_id_invalid_checksum",
      "traceback": "Traceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/case.py\", line 59, in testPartExecutor\n    yield\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/case.py\", line 591, in run\n    self._callTestMethod(testMethod)\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/case.py\", line 549, in _callTestMethod\n    method()\n  File \"/Users/sarahhoover/PycharmProjects/G01.2023.T04.EG3/src/unittest/python/test_register_order_tests.py\", line 93, in test_product_id_invalid_checksum\n    with self.assertRaises(OrderManagementException) as exception:\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/case.py\", line 226, in __exit__\n    self._raiseFailure(\"{} not raised\".format(exc_name))\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/unittest/case.py\", line 163, in _raiseFailure\n    raise self.test_case.failureException(msg)\nAssertionError: OrderManagementException not raised\n"
    }
  ],
  "tests-run": 25
}